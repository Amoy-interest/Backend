version: '2.0'

services:
  # mysql:
  #   image: my_mysql
  #   container_name: amoy_mysql
  #   volumes:
  #     - db_data:/var/lib/mysql
  #   restart: always
  #   environment:
  #     MYSQL_ROOT_HOST: '%'
  #     MYSQL_ROOT_PASSWORD: amoy123
  #     MYSQL_DATABASE: amoy

  #   ports:
  #     - "3306:3306"
  #      MYSQL_USER: boot
  #      MYSQL_PASSWORD: boot123
  mysql-master:
    build:
      context: ./mysql
      dockerfile: master/Dockerfile
    container_name: mysql-master
    env_file:
      - env/base.env
      - env/master.env
    networks:
      mysql_net:
        ipv4_address: 172.22.2.2
    volumes:
      - db_data_master:/var/lib/mysql
      - ./mysql/init-db-sql/init_database.sql:/docker-entrypoint-initdb.d/1-init.sql
      - ./mysql/init-db-sql/amoy_interest.sql:/docker-entrypoint-initdb.d/2-data.sql
      - ./mysql/init-db-sql/init-master.sh:/docker-entrypoint-initdb.d/3-init-master.sh
    environment:
      - "MYSQL_ROOT_PASSWORD=amoy123"
    # links:
    #   - mysql-slave
    ports:
      - "33065:3306"
    restart: always
    hostname: mysql-master

  mysql-slave:
    build:
      context: ./mysql
      dockerfile: slave/Dockerfile
    container_name: mysql-slave
    env_file:
      - env/base.env
      - env/node.env
    networks:
      mysql_net:
        ipv4_address: 172.22.2.3
    volumes:
      - db_data_slave:/var/lib/mysql
      - ./mysql/init-db-sql/init_database.sql:/docker-entrypoint-initdb.d/1-init.sql
      - ./mysql/init-db-sql/amoy_interest.sql:/docker-entrypoint-initdb.d/2-data.sql
      - ./mysql/init-db-sql/init-node.sh:/docker-entrypoint-initdb.d/3-init-node.sh
    environment:
      - "MYSQL_ROOT_PASSWORD=amoy123"
      - "MASTER_MYSQL_ROOT_PASSWORD=${MASTER_MYSQL_ROOT_PASSWORD}"
      - "MYSQL_DATABASE=amoy"
    ports:
      - "33066:3306"
    restart: always
    hostname: mysql-slave
    depends_on:
      - mysql-master

  mycat:
    build: ./mycat
    #image: mycat
    container_name: mycat
    hostname: mycat
    restart: always
    volumes:
      #- ./mycat/conf/mycat-logs/:/usr/local/mycat/logs/:rw # mycat日志文件
      - ./mycat/conf/log4j.xml:/usr/local/mycat/conf/log4j.xml
      - ./mycat/conf/server.xml:/usr/local/mycat/conf/server.xml
      - ./mycat/conf/schema.xml:/usr/local/mycat/conf/schema.xml
      - ./mycat/conf/rule.xml:/usr/local/mycat/conf/rule.xml
    ports:
      - "8066:8066"
      - "9066:9066"
    links:
      - mysql-master
      - mysql-slave
    networks:
      mysql_net:
        ipv4_address: 172.22.2.8

  redis:
    image: redis
    container_name: amoy_redis
    #command: redis-server
    command: redis-server --requirepass amoy123
    volumes:
      - db_data:/var/lib/redis
    ports:
       - "6379:6379"
    networks:
      mysql_net:
        ipv4_address: 172.22.2.5

  amoy_interest:
    build:
      context: ./
      dockerfile: ./Dockerfile
    container_name: amoy_dev3
    volumes:
      - /workspace/amoy-dev3.1/logs:/logs/
    # build: .
    ports:
      - "8082:8082"
    expose:
      - "8082"
    restart: always
    environment:
      SPRING_PROFILES_ACTIVE: prod
    depends_on:
      - mysql-master
      - mysql-slave
      - redis
      - mycat
    links:
      - mycat
    networks:
      mysql_net:
        ipv4_address: 172.22.2.4
  recommend: # docker-compose编排名称，一般同微服务名称，注意不要与其>他服务重名
    image: "python:3.7.0b4" # docker镜像名及版本
    hostname: recommand # docker容器主机名
    container_name: recommend # docker容器名
    volumes: # 挂载目录
      - ./recommend/python:/python # 项目相关
      - ./recommend/docker:/docker # docker相关
    ports: # 端口映射
      - "5000:5000"
    environment: # 配置环境变量
      - TZ=Asia/Shanghai # 设置时区
    command: bash /docker/run.sh #设置启动命令
    restart: unless-stopped # 自动启动s
    links:
      - mycat
    networks:
      mysql_net:
        ipv4_address: 172.22.2.6

networks:
  mysql_net:
    driver: bridge
    ipam:
      driver: default
      config:
      - subnet: 172.22.2.0/24
        #gateway: 172.32.2.1
volumes:
  db_data:
  db_data_master:
  db_data_slave:
